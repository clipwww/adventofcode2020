
function day20() {
  console.time();

const puzzle = `Tile 1579:
.#.##.#..#
#..#......
.#....#...
#.....#...
#..#....##
#.##.....#
#....#....
......###.
..#..#.###
......##.#

Tile 3413:
..##.#....
..##...#..
#....#.#.#
#..#.##...
.###...#.#
#..#..##.#
..#......#
.......#.#
#.....#.##
..#...####

Tile 3559:
#...###..#
##..#.....
.#.#.#....
####....#.
.####....#
..#.#.....
##........
...####.#.
#.......##
...#.#...#

Tile 3947:
#...#..#..
#....##...
.......#..
##.......#
###..##.##
#...#..###
....######
.#....##.#
..........
#....####.

Tile 1063:
#..###..#.
##.#...##.
...##..#.#
#.....####
.#...#....
#...##.#..
#..#....##
...##...#.
#.....#.##
#..#...#..

Tile 3613:
.##.#####.
..#.......
..........
..#.......
.#..#.....
.#.....#..
..###....#
........#.
#....#...#
###.....#.

Tile 3019:
#...#.####
#..#..#..#
..........
......###.
.#.#.....#
#.....#.##
....#.#.#.
##.......#
#..#......
##...###..

Tile 1429:
.#######..
####.....#
.#.##.#...
...##.#..#
....#.###.
#..##.....
...#..####
..#..##..#
#.##......
..##.#..#.

Tile 2543:
....##..#.
#...#.....
#..#..#..#
...#.###..
......####
...#...###
......####
#...#.#..#
..#.....##
...#.##.##

Tile 2447:
.#..#####.
##.#.....#
.....#...#
..#..#..##
#.#...#..#
##.#..#...
#####.#...
##.......#
...#..####
..###.###.

Tile 1471:
.##.###.#.
#...#...##
......##..
.....#....
#....#....
#.....#...
#...#.#...
.......#..
##..#....#
...#..#.##

Tile 1753:
#....#####
.######.#.
.#....##.#
#.........
......#..#
#...##....
#........#
###.......
#..#..#...
..#..#....

Tile 3583:
.##..#####
.........#
##.#...##.
..........
####..##.#
#..#.....#
.#...#...#
...#..###.
....##..#.
..#.##..##

Tile 1447:
###..###..
..#..#.#..
.#....#..#
#..#......
...###...#
#....#....
#....##...
#.####...#
##..###.##
.##...###.

Tile 2143:
##.##.#.#.
....#.....
..........
.......#.#
.#........
#..#....#.
...#......
#..#..#..#
..#.#.#..#
###....#.#

Tile 3433:
##.#...###
......####
.#........
#.##....##
##..#....#
.#...###.#
##.......#
##.....##.
.........#
.#........

Tile 2671:
#...#..###
#...#.#.#.
#...#.#..#
#.#....#.#
#..##.#.##
...#######
#.#..#..#.
#.#.....##
.......#..
.#....##..

Tile 3793:
.#.#.##.#.
##.......#
###..#....
#....#.#..
#..##.#...
#.....##..
.#...##..#
........#.
.##.....#.
###.######

Tile 1109:
....#.###.
.#.......#
#...#....#
..#.#.#.#.
....#.#..#
#.#.......
#.#.....##
.........#
##..#..#..
..####..#.

Tile 2837:
.#.#......
#.........
#.#.......
##.....#..
#...#....#
.....#...#
....###...
###.......
##.....#..
###...#.##

Tile 3529:
.###.#.##.
..#.#....#
.#..##...#
...#...#..
..##...#..
.....#.#.#
....#....#
#...#....#
.#..#..###
..##...##.

Tile 2161:
##..##..#.
.#..#.####
.....#...#
#....#...#
#.#...#...
#.....####
##..##....
....#.#..#
.....#....
.#####.#.#

Tile 2939:
#.........
......#..#
.....##...
....##.#.#
..##.....#
#...#####.
#...###...
#........#
.#......##
...###....

Tile 1409:
.##...####
.....#...#
#......##.
#.#.##..#.
#..#...###
.##......#
#.##...#.#
#.#....#..
.#.....#..
.#..#.....

Tile 2099:
..##.####.
#..##....#
#......#.#
.....#...#
#..#..#...
##.##....#
....#.....
#.....#..#
#...##....
#.##.#..#.

Tile 2081:
###.#.#.#.
.#.##.#..#
###..#####
#.#....#..
...#......
#...##...#
#.#....###
.##...#...
.##...##.#
#.#..##..#

Tile 3943:
..#..##.##
#....#.##.
..##...###
.#.#...#.#
#..####...
#..#...#.#
.##.#..#..
###.....#.
..#.....#.
####.#####

Tile 1867:
.##.#...#.
#..#...##.
#.#.#.....
#...#.....
.........#
..###...#.
...#......
.###..#..#
....#..##.
#...###.#.

Tile 1367:
#.#.#.....
..#.#..#..
........#.
..........
...#.....#
..#.##.##.
..#.#....#
.....#.##.
#......#..
##...####.

Tile 2207:
#.#..#.##.
##..#.#..#
...####...
.#.#...###
.......#..
#...#....#
#.##..#...
....#...##
.........#
.###.#..#.

Tile 2221:
....##.#..
.##....##.
.#..###.##
.#........
#.#.##.#..
....###..#
##.#..##..
..#....#..
##..#..#..
##.#.##..#

Tile 2053:
##.#.#....
#.........
.........#
#..#.#..##
#..#.....#
#....#.#..
#......#..
.....#....
.#.###...#
..##..#.##

Tile 3547:
####.####.
....#.#.##
##.#.#..##
##......#.
#.....#..#
..........
#.#.....##
.#........
.#.#..##..
##.#.##..#

Tile 1307:
#.##.#...#
......#..#
#....#....
#.......##
#.....#...
...##..#.#
.#.#.##...
....##..#.
...#...#.#
..#..#..##

Tile 2683:
#..##..#.#
..#.....##
###.##.#..
##....#...
#.##..#..#
######...#
..##..#..#
####.....#
....####..
#.#.##.#..

Tile 1973:
..##.##..#
#.#.#....#
#..#.#..#.
#...##....
.......#..
.......##.
#...#...##
..##....#.
#...#...##
.#####..##

Tile 2857:
..###.##.#
#..###....
.#.###..#.
#........#
...#.....#
##...#....
.##.###...
#....#...#
.....#...#
#.##...#..

Tile 3079:
##.....###
....#...##
#...##....
.#.#.....#
#.###.##..
###..#.###
#........#
...#......
#........#
#..###.##.

Tile 2281:
###...####
#..#.....#
#.....#...
#.#..#....
##.#...#.#
....##....
...#.#....
##.......#
..#..#....
..##.#.##.

Tile 2677:
####...#..
........##
.....##...
........#.
...#..#..#
...#...#.#
##.#.....#
.##..#.#..
..........
#.#....###

Tile 1151:
....#...##
..#..#..##
##.......#
..#..###..
..#...#..#
...#....#.
#....#....
.#....##.#
##.#.#####
#...##..#.

Tile 1979:
.###.#.#.#
..#..#....
.....#...#
#.#...#.#.
#....##..#
.#..####.#
.........#
##......#.
..#.....##
###.#...##

Tile 3853:
.#.#..#.##
####...#.#
....##...#
..##...#..
.......#.#
..##.#...#
#..#.#...#
.....##.#.
......#...
..#.##..#.

Tile 3359:
.#####.#.#
#..#.#...#
##.#......
...#....#.
....#.#...
..#..###..
#....####.
.......#.#
.#.......#
..#.##.#.#

Tile 3701:
.#.##.##.#
#..#......
#...#..#..
..#.....#.
#...#.....
.##.#....#
#...#..##.
#.##.....#
#...#.....
#.##...#..

Tile 2063:
##.......#
..........
#.#..#....
...##.##..
..#.###..#
#.........
......#..#
.#......#.
.##..####.
......####

Tile 1289:
.####.....
#.....#.#.
#.........
.#....#..#
#..#.....#
.#..#...#.
...#..#..#
#...##...#
...#....##
##.#..###.

Tile 1873:
..#.###.##
##.#.#....
....#..#..
.#.##.....
.#.#......
.####.#.#.
.#......#.
...##..#.#
#...#.#..#
###.##..#.

Tile 1559:
..####.#.#
#.#.#....#
....#.##..
#.##..###.
.#.###....
##....#..#
...#...#..
.#.#......
.#..#.....
...##.####

Tile 2287:
.###..####
#...#...#.
......###.
##.#......
#.#....#.#
.....#.#.#
..##.#...#
.#..#.##.#
##...#.###
.######...

Tile 2423:
.#.##...#.
#......#..
.#.#.##...
###.#...##
#.##..#...
.###.....#
##.###.#.#
#........#
##...#..##
.##.#..##.

Tile 2269:
..#.....##
...##.#..#
#.........
....##....
##.......#
......#..#
.......#.#
##...#....
...#....#.
...####.#.

Tile 1223:
...##...#.
#..###....
#..#..#..#
.#........
....##....
#.#......#
#........#
.....#....
.###....#.
##....####

Tile 1723:
.##..#..##
#..#.....#
.#....#..#
.##.......
...#..#..#
##........
##....##..
........##
....##....
..#.#....#

Tile 2371:
#...#.##..
#......##.
.#.#...#..
##...#..##
#...#....#
#..#.#.#..
#.#.....##
.....#..##
.##..###..
#..##..#..

Tile 2339:
#..###..##
..#..#.#..
##.......#
#..#......
#....##...
#..#...##.
.....#.#.#
#.#....#.#
#.#..#..#.
.#.##....#

Tile 1693:
.##.......
..#.###.#.
##.......#
##....#..#
#...#.....
#.#......#
..#.....#.
#.#......#
#.......#.
.#....###.

Tile 1811:
.#..#..#..
.#....##..
#.#...#..#
#....#...#
#...#.....
#.##..##..
#..##.....
#.....#...
#..#.....#
####.##...

Tile 2137:
###..#..#.
....#.#.##
.#..#..#.#
##....#.##
#....##...
##...#.##.
#.##..#...
.#........
##......#.
##..##..#.

Tile 2693:
.###..#.##
....#.#.#.
#.#.......
#...#.#...
#....#....
....##...#
.....#..#.
#.##...##.
#.#....###
#..#..##.#

Tile 3833:
##.##.....
#....#...#
#.......#.
#.......#.
##.##.....
..##.....#
....#...##
##.......#
..#.......
#####.####

Tile 2351:
#..###.##.
.........#
..#...#..#
..#.###...
#.#.#.#...
..##.....#
#.##..#..#
#.....#.#.
##.#....##
#.####.##.

Tile 3607:
.#.###....
.#..#....#
###...##.#
...#....##
#...###..#
#..###....
#..#....#.
...#.#....
##.#..#...
##.###..#.

Tile 1097:
.#.##.#.##
.#..##.#..
.......#.#
..........
#.#.#...##
##.....#.#
#...##...#
.#.......#
.##.##..#.
...##....#

Tile 3217:
..#.###...
.#..#....#
#..#....##
#...#...##
#.###...#.
.####..#.#
..#...#...
..#.#....#
..##.#...#
#.......#.

Tile 3083:
###..##.##
#........#
#.#.#.#..#
.....##...
..#..###..
#.###...##
........##
##...#....
##...#....
#..##.#..#

Tile 2273:
..###..#..
##.##.#.#.
......##..
......##..
.##..#..##
#..#....#.
.#.##.#..#
...##..###
#.....#..#
##..####.#

Tile 2957:
.####.#...
#.........
...#......
...#..#..#
..##......
#........#
..#.#.#..#
.##.......
...#.....#
####.#.##.

Tile 2521:
###.####.#
###..#..#.
#.........
...#...###
#..#...#..
.....##...
.....##.##
##........
#....#.#.#
..#..##.#.

Tile 1039:
##.#..####
#.......#.
.#.......#
#......##.
#.#...#...
..#..#.#..
###....###
.#..#....#
#....###.#
.####.####

Tile 2003:
....####..
.#...##..#
...#.....#
....#.....
#.......#.
..#....#..
....#.#.##
.#..##...#
...#...#.#
..###.####

Tile 3307:
##..#.#.#.
##.#......
....#.#...
.##.....#.
.........#
....##..##
..##......
##........
.....###..
##.#....##

Tile 2557:
...##.#...
.#....#.##
##....##..
#......#..
#......#..
......#..#
#.#...#...
#...#.#...
..........
.#.#.#.#.#

Tile 2731:
..#.###.#.
#.#..#....
#..#..#..#
#####..#..
#.....####
.....#.#..
........##
#.#.##...#
...#......
...#.#.#.#

Tile 2011:
#...####.#
#.....#.#.
###..#.#..
#...#...##
#..##.##..
....#.....
#.....#.#.
.#.....#..
##...#...#
..###..##.

Tile 2801:
#..#.##...
###.......
###.#.....
......#...
...##.....
#.........
..##..###.
##.#....##
#...##..#.
##.##..#.#

Tile 2909:
#..##...#.
........#.
....#.#...
.#....#.#.
#.......##
##..##....
....#..#..
..#....#..
#.#.....##
#.###.##..

Tile 2549:
#.#.#....#
#.###.....
.....#....
###.#.....
........#.
#.........
#..#...#.#
.#...#....
#......#..
######.##.

Tile 1567:
...#.##.#.
#.#.#..#..
##.#..###.
#.......##
##........
#..#.#..#.
#.........
....#..#..
..........
.#.#####..

Tile 1231:
.##.#.#..#
.#......##
..#.#.....
###..##.##
...#....##
...#.#..##
.....#..#.
#..#......
#....####.
####..#..#

Tile 2089:
####...#.#
#.....#.##
.........#
.#...#....
...#..#.##
##.#......
##....#...
..#..#..##
...##..#..
#.##......

Tile 2719:
.##..#.#.#
#........#
.......#..
##...#....
..#.#.....
#..##....#
#.#..##.#.
#.........
#.........
..####.##.

Tile 1789:
..#.#.##.#
.....#.###
.....#...#
..#..#..##
..........
..##....##
##.#...#.#
.##...##.#
..####..#.
.#.##.##.#

Tile 1009:
.##.###.#.
#....##..#
###...#...
...#.#..##
#...#.#..#
#.##.....#
..#.#...#.
..#.......
.#.#......
.##.#.#.#.

Tile 2477:
...###.#..
..##......
#.#..#..#.
.#.#..####
#......#.#
.##..#....
##..##....
...#..#.#.
..........
.##..##.##

Tile 1013:
#.#..#####
#.#....#..
..#.#..###
#....##..#
.#.#.....#
#...#.##..
.#....##.#
..#......#
#.#..#.#..
#.##.#####

Tile 1451:
#..##..###
..###...##
.....#.#.#
#...#.....
...#.#....
#.#.......
.#..##...#
##..######
#.#....#.#
#.#..##.#.

Tile 1667:
..#.##..#.
#.#...#.##
.#.###...#
..##......
.........#
####..##.#
.........#
.....#..##
##...##..#
##..#.#.#.

Tile 1511:
.#..#..###
#..#..##.#
....#...##
....##...#
...##.....
#...#..##.
#.##..#.#.
..........
...#....##
###.#.##.#

Tile 2917:
.#####....
....#...#.
#..#.....#
#.....#.#.
...#.#.##.
#.##.....#
......####
#....#..#.
..#####..#
#.##.##.##

Tile 3877:
#....####.
#.........
#.....#.#.
.#.....#..
....#..#.#
##.##.##..
..#..#..#.
#..##....#
...#..#.#.
.....#..##

Tile 3319:
#.#.######
#.......#.
.#......##
.........#
#.....#.##
#..####...
#..###....
#.##...#.#
#.........
...##.#.##

Tile 1087:
##..####.#
#.##.....#
.........#
...#......
....#..##.
..#..#..##
.###..##.#
#..#.....#
.....##..#
#.#.######

Tile 1279:
.#####.#..
....#.....
.........#
##........
..#...#...
.#........
..###.##..
.....#....
#.##.#.#.#
#..#...#..

Tile 3257:
.......#..
...#..##..
#.#..#..##
.#..#.##.#
#.........
..#.......
#..######.
..#......#
....#.....
...###..#.

Tile 2579:
....####.#
....#..#.#
.#.......#
....#..#..
#.##...###
.#.#...###
##........
#.#.####..
#.#..##..#
####..##..

Tile 1091:
.#..###.##
.#....#..#
#.........
#...#..#.#
#.#......#
#.#.#.#..#
#.#.##..#.
.#....#.#.
#....#...#
##.##..###

Tile 1423:
.#....#...
.....#..#.
#.#....#.#
#.#####..#
#....#...#
.####.....
.#.###....
....#....#
#..#.##...
...#...#..

Tile 2531:
####.#..##
.#...##..#
........#.
.#....#.#.
...####..#
##........
#....#..##
...#....#.
#......#..
.........#

Tile 3767:
.#...#.##.
..#.#.#..#
#.#..#..#.
.......#.#
...###...#
#...###.##
#..#..#...
#....###..
#...####.#
.###.#####

Tile 2833:
#......##.
##.....##.
........#.
#...#..#..
#....#....
##......##
....####.#
......#.##
##....#...
#..#.##...

Tile 1291:
###.#..#..
#..##.#.#.
........##
#.......#.
...#......
......#.##
..........
.#.....###
#...##....
..##.####.

Tile 2399:
##.....#..
#..####..#
##...#..##
#....#.#.#
.##.#..#..
#.#......#
#.#..#....
#...#.#.##
..#....#..
...##..#..

Tile 1997:
.##.#..##.
..........
....#.....
......#.##
.#.##..#..
.........#
###..#..##
#..#.##...
..###.....
....####..

Tile 3119:
..##..#..#
#.#..#....
#.........
#...##.##.
##.....#.#
...#..#...
#..##....#
...#......
##..#.#...
.#..#.####

Tile 2417:
.#.#.##...
#..#.##...
....#...#.
.........#
......#.#.
.#...#....
###.....#.
....#.....
#..#.#....
####..#.##

Tile 3643:
.....##...
.#.#.###..
#..#......
##....#...
#.........
##.#....##
##.#......
#.#..####.
#.....#...
#..###...#

Tile 3491:
..##.##.#.
##.....#.#
#...##...#
####....#.
...#..#...
#........#
#...##...#
##.......#
###.....#.
#....#.##.

Tile 1103:
#.#...##.#
#.........
...#..##..
.....#...#
.........#
#...##..##
#..#..#..#
....#..#.#
#.....##..
####.#..#.

Tile 3001:
.#######..
#.##....##
..##......
##..#.....
....##.#..
#...#.....
#.....##..
#..#...###
......#...
.##.#..#..

Tile 3301:
..##.#..##
....#.....
#.#.....#.
...#......
#....#...#
#.#.....#.
#....#..#.
....##.###
........##
###.##..##

Tile 2411:
...###.###
.#.##.#...
.....#..#.
.....#....
.........#
.....#....
....#...#.
.....#....
##..#.....
##..#.#...

Tile 3769:
.#.#.#....
..#....##.
#....#...#
.#.......#
...#......
.#.....#.#
#.###..#.#
##.##....#
..#.##.#.#
.##.#.##.#

Tile 2791:
..##.#.#.#
#..#..#..#
...#......
.#.......#
....#.....
#.........
#.......#.
#....##..#
#.#.....#.
.###....#.

Tile 1381:
..##.##...
##........
#.........
..##.#.#.#
....#...##
##......#.
....#..#..
.....##.#.
#.....#.##
##..#....#

Tile 1181:
....#...#.
###..#..#.
##.......#
#....#.#.#
....#...#.
.##.#.#.#.
.#..#....#
.#.##.....
...##....#
...##..#.#

Tile 1999:
#..##.##.#
###..#....
#.........
.##.......
.#..##.#..
.###..#.#.
.......#.#
#.......#.
..#...##.#
..##..#...

Tile 2749:
.......#.#
.#....#..#
...#.#....
#.........
....###..#
.#...##...
....#.##..
#.#...#.#.
..#..##.##
#.###..#.#

Tile 2393:
#.###.....
#..#.###.#
.......#.#
#....###.#
#.....#...
...##..#.#
##........
##....#...
...#..###.
#...##..#.

Tile 2707:
..#..#####
###..##.#.
...#....##
..........
#..#..#...
#.#....##.
#.........
#.#......#
#.#.#....#
.#.##.....

Tile 1901:
##.#####..
#.#....#..
#..#.#.#..
....#.#.##
....#....#
..###.....
#.##.#.#.#
#.#...#..#
##.#..#..#
.##..#.#..

Tile 3821:
###..#####
#.....###.
#........#
#....#....
.#..#.#...
.#.#..#...
#.#..#...#
##........
.##.#.....
.....###..

Tile 2239:
#..#.##.#.
#...#.....
#.........
..#.#.#...
#....#.#..
.....#...#
#.#.#...#.
##...##...
..##.#.#.#
#.##.###..

Tile 2659:
#.####.###
#.......#.
...#.....#
....#..##.
#......#.#
.##...#...
##........
#...##.#.#
#.#...#..#
#..#####..

Tile 3517:
.#..###.#.
.##.#.#.#.
###.#...##
....#...#.
#.#.##....
..##..#...
.......#..
...#.....#
#.#......#
..####..##

Tile 2111:
######.##.
#....#...#
.....##..#
......#.##
.#.###...#
.##..#..##
##.......#
.#.....#.#
...#..#..#
.#.###.###

Tile 3109:
.#.#.##...
#...##...#
#......#.#
..#......#
#.#...#.##
#...#....#
......#..#
##.......#
#.#..##.##
#.#......#

Tile 3691:
...#...##.
##....##.#
..#...##..
...##..###
.#.#......
#.###..#..
...#......
#...#...##
.#........
.##.##....

Tile 1889:
#...#.#...
#.......#.
..##..#..#
#.....#..#
..#.#...##
#....#....
#...#.....
#...#..##.
#..#....##
#.....#.#.

Tile 1051:
.......##.
#.........
#..#..#..#
#......#.#
.....##...
..#...##..
#........#
#......#..
..#..#....
.....#.#.#

Tile 2633:
...#####..
#....#....
#.....#...
...##.....
..#.#.....
#.....##..
#..###..##
#..#.#...#
#..##.#.##
##...##.##

Tile 1949:
##.#..#...
.#....#...
#........#
#.#.#....#
#.......#.
#..###.##.
.#......##
.#........
...##.....
..#...#...

Tile 3169:
##..#.##..
..........
#......#..
#.........
..........
#...###..#
..#.####.#
#......#..
##..#....#
..##...##.

Tile 2027:
#..##...##
........#.
#.#......#
##.....#.#
##...##..#
..#.##.#..
#...#.#..#
#.#.......
..#.#..##.
...####.##

Tile 2851:
.####...##
#.#....#.#
..##......
...##.....
#...#...##
..##....#.
#....##.#.
.#..#...#.
#.##...#..
.##....#..

Tile 1213:
#.##.#####
#....#..##
#........#
#.##......
..#.#...##
..........
....#.#...
#....##...
#....#..#.
####.#.#.#

Tile 1847:
#..#..##.#
.........#
.........#
...#....#.
...#...#.#
#...#..#..
#...#..##.
###..#.#.#
#....####.
####.###.#

Tile 2843:
.###...##.
#..#....##
....#.#...
#.......##
#.#....#.#
......#..#
.....###..
##....#...
.......#..
##..##.#.#

Tile 1163:
..#.#..###
....##....
..#.#...#.
#.#.....##
.#........
##..#.....
#...#....#
...#..#..#
##...#.#.#
#.....#..#

Tile 3617:
.#.#.#.###
.....#.#.#
.........#
#........#
#.#.##.#.#
####.#..#.
.##...####
.......#..
###..#...#
..####.#.#

Tile 2963:
#.......#.
.....#...#
.##......#
#.#....###
..##...#..
#.###..#.#
....#....#
..#.#...##
#..###....
#..#..#.#.

Tile 1709:
#...#.##..
.#....####
.....#.#.#
#........#
#..###....
#......###
###.....#.
....#..#..
.##.#....#
.#.#...#..

Tile 1583:
.#.##.#.#.
#.....#..#
.....##...
##....#..#
##.#.....#
.#.......#
#.##.#..##
##..#..###
...#....#.
..#.###.#.

Tile 3881:
####.#.#.#
.....#.#.#
#......#.#
...#......
.#.....#..
....#.#.##
..........
##.....#..
#...##...#
..#.###..#`

  const puzzle2 = `Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...`;

  let curId = '';

  const puzzleMap = puzzle.split('\n').reduce((map, cur) => {
    let line = cur.replace(/\s/g, '');

    if (/Tile/.test(line)) {
      const [_, id] = line.match(/Tile(\d{1,}):/);
      curId = id;
      map.set(curId, []);
    } else if (!!line) {
      const arr = map.get(curId);
      arr.push(line.split(''));
    }

    return map;
  }, new Map<string, string[][]>())

  const answer1 = (function () {
    const position = ['top', 'right', 'bottom', 'left'];
    function getBorder(value: string[][]) {
      const border = [
        // top right bottom left
        '', '', '', ''
      ]

      for (let i = 0; i < value.length; i++) {
        border[0] += value[0][i]
        border[1] += value[i][value.length - 1]
        border[2] += value[value.length - 1][i]
        border[3] += value[i][0]
      }

      return border;
    }

    const exactlyMap = new Map<string, number>()
    puzzleMap.forEach((value, id) => {
      const border = getBorder(value);

      puzzleMap.forEach((othValue, othId) => {
        if (othId === id) return;
        const othBorder = getBorder(othValue);

        border.forEach((b, i) => {
          othBorder.forEach((ob, j) => {
            switch (true) {
              case b === ob:
              case b === ob.split('').map(s => s).reverse().join(''):
                exactlyMap.set(id, (exactlyMap.get(id) || 0) + 1)
                break;
            }
          })
        })
      })
    })

    // console.log(exactlyMap)
    let sum = 1;
    exactlyMap.forEach((value, id) => {
      if (value === 2) {
        sum *= +id;
      }
    })
    return sum;
  }())
  console.log('part1', answer1);

  const answer2 = (function () {
    let tiles: Tile[] = [];
    class Tile {
      id: number;
      data: string[];
      topEdge: string;
      bottomEdge: string;
      leftEdge: string;
      rightEdge: string;
      edges: string[] = []
      topEdgeTile: Tile;
      bottomEdgeTile: Tile;
      leftEdgeTile: Tile;
      rightEdgeTile: Tile;
      matches: Tile[] = []
      constructor(id: number, data: string[]) {
        this.id = id
        this.data = data
      }
    }

    const reverseValue = (value: string) => {
      return value.split('').reverse().join('')
    }

    const setEdges = (tile: Tile) => {
      tile.topEdge = tile.data[0]
      tile.bottomEdge = tile.data[tile.data.length - 1]
      tile.leftEdge = tile.data.reduce((a, b) => `${a}${b.substring(0, 1)}`, '')
      tile.rightEdge = tile.data.reduce((a, b) => `${a}${b.substring(b.length - 1)}`, '')
      tile.edges = [tile.topEdge, tile.bottomEdge, tile.leftEdge, tile.rightEdge, reverseValue(tile.topEdge), reverseValue(tile.bottomEdge), reverseValue(tile.leftEdge), reverseValue(tile.rightEdge)]

      return tile
    }

    puzzle.split('Tile').forEach(t => {
      if (t) {
        const lines = t.split('\n').filter(l => l.length > 0)
        const tile = lines.slice(1)
        tiles.push(new Tile(+lines[0].trim().replace(':', ''), tile))
      }
    })
    tiles.forEach(tile => {
      tile = setEdges(tile)
    })

    tiles.forEach(tile => {
      const edges = ['topEdge', 'rightEdge', 'bottomEdge', 'leftEdge']
      edges.forEach(edge => {
        const edgeTile = tiles.find(t => t.id !== tile.id && t.edges.indexOf(tile[edge]) > -1)
        if (edgeTile) {
          tile.matches.push(edgeTile)
          tile[`${edge}Tile`] = edgeTile
        }
      })
    })

    const rotateArray = (data: string[]) => {
      const newData = []
      for (let ci = 0; ci <= data[0].length - 1; ci += 1) {
        const newRow = []
        for (let ri = data.length - 1; ri >= 0; ri -= 1) {
          newRow.push(data[ri][ci])
        }
        newData.push(newRow.join(''))
      }
      return newData
    }

    const rotateTile = (tile: Tile) => {
      tile.data = rotateArray(tile.data)
      tile = setEdges(tile)
      return tile
    }

    const flipTile = (tile: Tile, horizontalFlip: boolean) => {
      const { data } = { ...tile }

      if (horizontalFlip) {
        tile.data = data.map(d => reverseValue(d))
      } else {
        tile.data = data.reverse()
      }

      tile = setEdges(tile)

      return tile
    }

    const topLeftCorner = tiles.find(t => t.matches.length === 2 && !!t.rightEdgeTile && !!t.bottomEdgeTile)
    let theTile = topLeftCorner
    let firstTileInRow = theTile
    let ids = ''
    while (true) {
      while (true) {
        ids += `${theTile.id} `
        let nextTile = tiles.find(t => t.id !== theTile.id && t.edges.indexOf(theTile.rightEdge) > -1)
        if (nextTile) {
          theTile.rightEdgeTile = nextTile
          if (theTile.rightEdge === nextTile.leftEdge) {
            // do nothing, they match, onto the next tile
          }
          if (theTile.rightEdge === reverseValue(nextTile.leftEdge)) {
            nextTile = flipTile(nextTile, false)
          }
          if (theTile.rightEdge !== reverseValue(nextTile.leftEdge) && theTile.rightEdge !== nextTile.leftEdge) {
            for (let r = 0; r < 4; r += 1) {
              nextTile = rotateTile(nextTile)
              if (theTile.rightEdge === reverseValue(nextTile.leftEdge) || theTile.rightEdge === nextTile.leftEdge) {
                if (theTile.rightEdge === reverseValue(nextTile.leftEdge)) {
                  nextTile = flipTile(nextTile, false)
                }
                break
              }
            }
          }
          theTile = nextTile
        } else {
          theTile.rightEdgeTile = null
          break
        }
      }
      ids += '\n'

      let bottomTile = tiles.find(t => t.edges.indexOf(firstTileInRow.bottomEdge) > -1 && ids.indexOf(`${t.id}`) === -1)
      if (bottomTile) {
        if (firstTileInRow.bottomEdge === bottomTile.topEdge) {
          // do nothing, they' match, onto the next tile
        }
        if (firstTileInRow.bottomEdge === reverseValue(bottomTile.topEdge)) {
          bottomTile = flipTile(bottomTile, false)
        }
        if (firstTileInRow.bottomEdge !== reverseValue(bottomTile.topEdge) && firstTileInRow.bottomEdge !== bottomTile.topEdge) {
          for (let r = 0; r < 4; r += 1) {
            bottomTile = rotateTile(bottomTile)
            if (firstTileInRow.bottomEdge === reverseValue(bottomTile.topEdge) || firstTileInRow.bottomEdge === bottomTile.topEdge) {
              break
            }
          }
          if (firstTileInRow.bottomEdge === reverseValue(bottomTile.topEdge)) {
            bottomTile = flipTile(bottomTile, true)
          }
        }
        firstTileInRow.bottomEdgeTile = bottomTile
        firstTileInRow = bottomTile
        theTile = firstTileInRow
        // rotate/flip needed?
      } else {
        break
      }
    }
    console.log('the image:')
    console.log(ids)

    theTile = topLeftCorner
    let rowPad = 0
    let allData = []
    firstTileInRow = theTile
    let rows = ''
    while (true) {
      // console.log(rows)
      if (rows.indexOf(`${firstTileInRow.id}`) > -1) {
        break
      }
      rows += `${firstTileInRow.id} `
      while (true) {
        const { data } = theTile
        const newData = data.slice(1, data.length - 1).map(d => d.substring(1, d.length - 1))
        for (let i = 0; i < newData.length; i += 1) {
          const rowidx = i + rowPad
          allData[rowidx] = !allData[rowidx] ? newData[i] : allData[rowidx] + newData[i]
        }

        if (theTile.rightEdgeTile) {
          theTile = theTile.rightEdgeTile
        } else {
          rowPad += newData.length
          break
        }
      }
      // allData.map(a => console.log(a))

      if (firstTileInRow.bottomEdgeTile) {
        firstTileInRow = firstTileInRow.bottomEdgeTile
        theTile = firstTileInRow
      } else {
        break
      }
    }


    let seaMoster = [];
    [
      // 3.50
      '                  # ',
      '#    ##    ##    ###',
      ' #  #  #  #  #  #   ',
    ].forEach((line, y) => {
      line.split('').forEach((character, x) => {
        if (character === '#') {
          seaMoster.push({ x, y })
        }
      })
    })
    
  

    const allSea = [
      allData,
      allData.map(d => reverseValue(d)),
      allData.reverse(),
      allData.map(d => reverseValue(d)).reverse(),
    ]
  

    const monsterSet = new Set<string>();
    let foundThem = false; // The monsters only appear in one orientation
    for (const sea of allSea) {

      monsterSet.clear();
      for (let y = 0; y < sea.length; y++) {
        const row = sea[y];
        for (let x = 0; x < row.length; x++) {

          const relativeMonsterTiles = seaMoster.map((d) => ({ x: d.x + x, y: d.y + y }));
       
          if (relativeMonsterTiles.every((d) => sea[d.x] ? sea[d.x][d.y] === '#' : false)) {
            monsterSet.add(`${x},${y}`)
            foundThem = true;
          }
        }
      }
      if (foundThem) {
        break;
      }
    }
    

    return allData.join('').match(/#/g).length - monsterSet.size * seaMoster.length;
  }())
  console.log('part2', answer2);

  console.timeEnd();

}

day20()